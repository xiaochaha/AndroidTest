<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.avocado.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.avocado.entity.Order">
    <constructor>
      <idArg column="c_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="f_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="o_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="o_quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="o_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="o_remarks" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="o_regtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="o_canceltime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    c_id, f_id, o_id, o_quantity, o_total, o_remarks, o_regtime, o_canceltime
  </sql>
  <select id="selectByExample" parameterType="com.avocado.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.avocado.entity.OrderKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where c_id = #{cId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.avocado.entity.OrderKey">
    delete from tb_order
    where c_id = #{cId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.avocado.entity.OrderExample">
    delete from tb_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.avocado.entity.Order">
    insert into tb_order (c_id, f_id, o_id, 
      o_quantity, o_total, o_remarks, 
      o_regtime, o_canceltime)
    values (#{cId,jdbcType=INTEGER}, #{fId,jdbcType=INTEGER}, #{oId,jdbcType=VARCHAR}, 
      #{oQuantity,jdbcType=INTEGER}, #{oTotal,jdbcType=DOUBLE}, #{oRemarks,jdbcType=VARCHAR}, 
      #{oRegtime,jdbcType=TIMESTAMP}, #{oCanceltime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.avocado.entity.Order">
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        c_id,
      </if>
      <if test="fId != null">
        f_id,
      </if>
      <if test="oId != null">
        o_id,
      </if>
      <if test="oQuantity != null">
        o_quantity,
      </if>
      <if test="oTotal != null">
        o_total,
      </if>
      <if test="oRemarks != null">
        o_remarks,
      </if>
      <if test="oRegtime != null">
        o_regtime,
      </if>
      <if test="oCanceltime != null">
        o_canceltime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="fId != null">
        #{fId,jdbcType=INTEGER},
      </if>
      <if test="oId != null">
        #{oId,jdbcType=VARCHAR},
      </if>
      <if test="oQuantity != null">
        #{oQuantity,jdbcType=INTEGER},
      </if>
      <if test="oTotal != null">
        #{oTotal,jdbcType=DOUBLE},
      </if>
      <if test="oRemarks != null">
        #{oRemarks,jdbcType=VARCHAR},
      </if>
      <if test="oRegtime != null">
        #{oRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="oCanceltime != null">
        #{oCanceltime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.avocado.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from tb_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_order
    <set>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.fId != null">
        f_id = #{record.fId,jdbcType=INTEGER},
      </if>
      <if test="record.oId != null">
        o_id = #{record.oId,jdbcType=VARCHAR},
      </if>
      <if test="record.oQuantity != null">
        o_quantity = #{record.oQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.oTotal != null">
        o_total = #{record.oTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.oRemarks != null">
        o_remarks = #{record.oRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.oRegtime != null">
        o_regtime = #{record.oRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oCanceltime != null">
        o_canceltime = #{record.oCanceltime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_order
    set c_id = #{record.cId,jdbcType=INTEGER},
      f_id = #{record.fId,jdbcType=INTEGER},
      o_id = #{record.oId,jdbcType=VARCHAR},
      o_quantity = #{record.oQuantity,jdbcType=INTEGER},
      o_total = #{record.oTotal,jdbcType=DOUBLE},
      o_remarks = #{record.oRemarks,jdbcType=VARCHAR},
      o_regtime = #{record.oRegtime,jdbcType=TIMESTAMP},
      o_canceltime = #{record.oCanceltime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.avocado.entity.Order">
    update tb_order
    <set>
      <if test="oId != null">
        o_id = #{oId,jdbcType=VARCHAR},
      </if>
      <if test="oQuantity != null">
        o_quantity = #{oQuantity,jdbcType=INTEGER},
      </if>
      <if test="oTotal != null">
        o_total = #{oTotal,jdbcType=DOUBLE},
      </if>
      <if test="oRemarks != null">
        o_remarks = #{oRemarks,jdbcType=VARCHAR},
      </if>
      <if test="oRegtime != null">
        o_regtime = #{oRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="oCanceltime != null">
        o_canceltime = #{oCanceltime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where c_id = #{cId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.avocado.entity.Order">
    update tb_order
    set o_id = #{oId,jdbcType=VARCHAR},
      o_quantity = #{oQuantity,jdbcType=INTEGER},
      o_total = #{oTotal,jdbcType=DOUBLE},
      o_remarks = #{oRemarks,jdbcType=VARCHAR},
      o_regtime = #{oRegtime,jdbcType=TIMESTAMP},
      o_canceltime = #{oCanceltime,jdbcType=TIMESTAMP}
    where c_id = #{cId,jdbcType=INTEGER}
      and f_id = #{fId,jdbcType=INTEGER}
  </update>


  <resultMap id="allResultMap" type="com.avocado.entity.Order">
    <constructor>
      <idArg column="c_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="f_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="o_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="o_quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="o_total" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="o_remarks" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="o_regtime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="o_canceltime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
    <collection property="food" javaType="com.avocado.entity.Food">
      <result column="f_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="f_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="f_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <result column="f_discount" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <result column="f_picture" javaType="java.lang.String" jdbcType="VARCHAR" />
    </collection>
    <collection property="customer" javaType="com.avocado.entity.Customer">
      <result column="c_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="c_username" javaType="java.lang.String" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <!-- 显示所有订单-->
  <select id="allOrderList" resultMap="allResultMap" >
    select c.c_username,f.f_name,f.f_price,f.f_discount,f.f_picture,o.*
    from tb_food as f,tb_customer as c,tb_order as o
    where c.c_id=o.c_id and f.f_id=o.c_id
  </select>
  <!-- 显示客户订单-->
  <select id="userOrderList" resultMap="allResultMap" >
    select c.c_username,f.f_name,f.f_price,f.f_discount,f.f_picture,o.*
    from tb_food as f,tb_customer as c,tb_order as o
    where c.c_id=o.c_id and f.f_id=o.c_id and c.c_id=#{cId}
  </select>

  <delete id="deleteAllOrder">
    delete from tb_order
    where c_id = #{cId,jdbcType=INTEGER}
  </delete>
</mapper>